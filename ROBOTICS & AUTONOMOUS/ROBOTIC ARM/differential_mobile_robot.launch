<launch>
	
	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<!-- We resume the logic in empty_world.launch (available in installed package gazebo_ros) -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>
	
	<!-- Load the URDF into the ROS Parameter Server -->
	<param name="robot_description" textfile="$(find robot_simulation_in_gazebo)/urdf/differential_robot.urdf" />
	
	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
												args="-urdf -model differential_robot -param robot_description"/> 
	
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>

	<!-- start robot state publisher -->
	<node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher" output="screen" >
		<param name="publish_frequency" type="double" value="50.0" />
	</node>
	
	<!-- differential_teleop_key already has its own built in velocity smoother -->
	<node pkg="robot_simulation_in_gazebo" type="diff_robot_key" name="diff_robot_key" output="screen">
		<param name="scale_linear" value="0.5" type="double"/>
		<param name="scale_angular" value="1.5" type="double"/>
		<remap from="turtlebot_teleop_keyboard/cmd_vel" to="/cmd_vel"/>
	</node>
	
</launch>
